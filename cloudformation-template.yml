AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template for Retatrutide Tracker PWA deployment'

Parameters:
  DomainName:
    Type: String
    Description: 'Custom domain name for the application (optional)'
    Default: ''

  ProjectName:
    Type: String
    Description: 'Project name for resource naming'
    Default: 'reta-tracker'

Conditions:
  HasDomainName: !Not [!Equals [!Ref DomainName, '']]

Resources:
  # S3 Bucket for static website hosting
  WebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${ProjectName}-${AWS::AccountId}'
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      CorsConfiguration:
        CorsRules:
          - AllowedOrigins:
              - '*'
            AllowedMethods:
              - GET
              - HEAD
            AllowedHeaders:
              - '*'
            MaxAge: 3600
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldVersions
            Status: Enabled
            NoncurrentVersionExpirationInDays: 30
      Tags:
        - Key: Application
          Value: !Ref ProjectName
        - Key: Environment
          Value: Production

  # Bucket Policy for public read access
  WebsiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref WebsiteBucket
      PolicyDocument:
        Statement:
          - Sid: PublicReadGetObject
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Sub '${WebsiteBucket.Arn}/*'

  # CloudFront Origin Access Identity
  CloudFrontOAI:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub 'OAI for ${ProjectName}'

  # CloudFront Distribution for HTTPS and CDN
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        Comment: !Sub '${ProjectName} PWA Distribution'
        DefaultRootObject: index.html
        HttpVersion: http2and3
        IPV6Enabled: true
        PriceClass: PriceClass_100  # Use only North America and Europe edge locations

        Origins:
          - Id: S3Origin
            DomainName: !GetAtt WebsiteBucket.RegionalDomainName
            S3OriginConfig:
              OriginAccessIdentity: !Sub 'origin-access-identity/cloudfront/${CloudFrontOAI}'

        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachedMethods:
            - GET
            - HEAD
          Compress: true
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          MinTTL: 0
          DefaultTTL: 300  # 5 minutes for HTML
          MaxTTL: 86400    # 24 hours

        CacheBehaviors:
          # Cache Service Worker with no caching (always fetch latest)
          - PathPattern: 'sw.js'
            TargetOriginId: S3Origin
            ViewerProtocolPolicy: redirect-to-https
            AllowedMethods:
              - GET
              - HEAD
            Compress: true
            ForwardedValues:
              QueryString: false
            MinTTL: 0
            DefaultTTL: 0
            MaxTTL: 0

          # Cache static assets (JS, CSS) for longer
          - PathPattern: 'src/*'
            TargetOriginId: S3Origin
            ViewerProtocolPolicy: redirect-to-https
            AllowedMethods:
              - GET
              - HEAD
            Compress: true
            ForwardedValues:
              QueryString: false
            MinTTL: 0
            DefaultTTL: 31536000  # 1 year
            MaxTTL: 31536000

        CustomErrorResponses:
          # SPA routing - return index.html for 404s
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
            ErrorCachingMinTTL: 300
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html
            ErrorCachingMinTTL: 300

        ViewerCertificate:
          CloudFrontDefaultCertificate: true
          MinimumProtocolVersion: TLSv1.2_2021

      Tags:
        - Key: Application
          Value: !Ref ProjectName
        - Key: Environment
          Value: Production

  # CloudWatch Alarm for high error rate
  CloudFrontErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub '${ProjectName}-high-error-rate'
      AlarmDescription: 'Alert when CloudFront error rate exceeds threshold'
      MetricName: 4xxErrorRate
      Namespace: AWS/CloudFront
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 5
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: DistributionId
          Value: !Ref CloudFrontDistribution

Outputs:
  BucketName:
    Description: 'S3 Bucket Name'
    Value: !Ref WebsiteBucket
    Export:
      Name: !Sub '${AWS::StackName}-BucketName'

  BucketWebsiteURL:
    Description: 'S3 Website URL'
    Value: !GetAtt WebsiteBucket.WebsiteURL
    Export:
      Name: !Sub '${AWS::StackName}-WebsiteURL'

  CloudFrontDistributionId:
    Description: 'CloudFront Distribution ID'
    Value: !Ref CloudFrontDistribution
    Export:
      Name: !Sub '${AWS::StackName}-DistributionId'

  CloudFrontURL:
    Description: 'CloudFront Distribution URL'
    Value: !GetAtt CloudFrontDistribution.DomainName
    Export:
      Name: !Sub '${AWS::StackName}-CloudFrontURL'

  DeploymentCommand:
    Description: 'Command to deploy files to S3'
    Value: !Sub |
      aws s3 sync . s3://${WebsiteBucket}/ --exclude ".*" --exclude "node_modules/*" --exclude "tests/*" --exclude "*.md" --delete

  InvalidationCommand:
    Description: 'Command to invalidate CloudFront cache'
    Value: !Sub |
      aws cloudfront create-invalidation --distribution-id ${CloudFrontDistribution} --paths "/*"
